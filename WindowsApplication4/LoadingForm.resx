<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2Q==
</value>
  </data>
</root>